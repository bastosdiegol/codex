{"mappings":"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","sources":["<anon>","node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-a07d4b5167fcdabf.js","scripts/app.js","node_modules/@parcel/runtime-js/lib/runtime-55407ccca66fb0b9.js"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire94c2\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire94c2\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"27Lyk\", function(module, exports) {\n\n$parcel$export(module.exports, \"register\", () => $18c11f3350a906ea$export$6503ec6e8aabbaf, (v) => $18c11f3350a906ea$export$6503ec6e8aabbaf = v);\nvar $18c11f3350a906ea$export$6503ec6e8aabbaf;\nvar $18c11f3350a906ea$export$f7ad0328861e2f03;\n\"use strict\";\nvar $18c11f3350a906ea$var$mapping = new Map();\nfunction $18c11f3350a906ea$var$register(baseUrl, manifest) {\n    for(var i = 0; i < manifest.length - 1; i += 2)$18c11f3350a906ea$var$mapping.set(manifest[i], {\n        baseUrl: baseUrl,\n        path: manifest[i + 1]\n    });\n}\nfunction $18c11f3350a906ea$var$resolve(id) {\n    var resolved = $18c11f3350a906ea$var$mapping.get(id);\n    if (resolved == null) throw new Error('Could not resolve bundle with id ' + id);\n    return new URL(resolved.path, resolved.baseUrl).toString();\n}\n$18c11f3350a906ea$export$6503ec6e8aabbaf = $18c11f3350a906ea$var$register;\n$18c11f3350a906ea$export$f7ad0328861e2f03 = $18c11f3350a906ea$var$resolve;\n\n});\n\nvar $118d179710c86e62$exports = {};\n\n(parcelRequire(\"27Lyk\")).register(new URL(\"\", import.meta.url).toString(), JSON.parse(\"[\\\"seGuh\\\",\\\"index.3e4a8120.js\\\",\\\"LVq70\\\",\\\"service-worker.612cd456.js\\\"]\"));\n\nvar $9b58f915dd881523$exports = {};\n$9b58f915dd881523$exports = new URL(\"service-worker.612cd456.js\", import.meta.url).toString();\n\n\nconst $1b8da20507600032$var$sw = new URL($9b58f915dd881523$exports);\nif (\"serviceWorker\" in navigator) {\n    const s = navigator.serviceWorker;\n    s.register($1b8da20507600032$var$sw.href, {\n        scope: \"/codex/\"\n    }).then((_)=>console.log(\"Service Worker Registered for scope:\", $1b8da20507600032$var$sw.href, \"with\", \"file:///scripts/app.js\")).catch((err)=>console.error(\"Service Worker Error:\", err));\n}\ndocument.addEventListener(\"DOMContentLoaded\", ()=>{\n    const bookList = document.getElementById(\"book-list\");\n    const bookForm = document.getElementById(\"book-form\");\n    const menu = document.getElementById(\"side-menu\");\n    const overlay = document.getElementById(\"menu-overlay\");\n    const burgerMenu = document.getElementById(\"burger-menu\");\n    const closeButton = document.getElementById(\"close-menu\");\n    const addBookLink = document.getElementById(\"add-book-link\");\n    const saveBook = document.getElementById(\"save-book\");\n    const closeBookForm = document.getElementById(\"close-form\");\n    const deleteBook = document.getElementById(\"delete-book\");\n    const bookId = document.getElementById(\"book-id\");\n    // Burguer Menu Functionality\n    function openMenu() {\n        menu.classList.add(\"open\");\n        overlay.classList.add(\"show\");\n    }\n    function closeMenu() {\n        menu.classList.remove(\"open\");\n        overlay.classList.remove(\"show\");\n    }\n    burgerMenu.addEventListener(\"click\", openMenu);\n    closeButton.addEventListener(\"click\", closeMenu);\n    overlay.addEventListener(\"click\", closeMenu);\n    // Display Books Functionality\n    let books = [\n        {\n            id: 1,\n            cover: \"https://www.royalroadcdn.com/public/covers-full/21220-mother-of-learning.jpg?time=1637247458\",\n            title: \"Mother of Learning\",\n            author: \"nobody103, Domagoj Kurmai\\u0107\",\n            genre: \"Fantasy, Magic, Time Travel\",\n            progress: 100,\n            status: \"Read\",\n            rating: 5\n        },\n        {\n            id: 2,\n            cover: \"\",\n            title: \"A Practical Guide to Sorcery\",\n            author: \"Azalea Ellis\",\n            genre: \"Fantasy, Magic, Gender Bender\",\n            progress: 90,\n            status: \"Reading\",\n            rating: 4\n        },\n        {\n            id: 3,\n            cover: \"\",\n            title: \"Os Sete\",\n            author: \"Andr\\xe9 Vianco\",\n            genre: \"Horror, Vampires\",\n            progress: 100,\n            status: \"Read\",\n            rating: 5\n        },\n        {\n            id: 4,\n            cover: \"\",\n            title: \"Super Supportive\",\n            author: \"Sleyca\",\n            genre: \"Super Heroes, Slice of Life\",\n            progress: 90,\n            status: \"Dropped\",\n            rating: 3\n        },\n        {\n            id: 5,\n            cover: \"\",\n            title: \"The Path of Ascension\",\n            author: \"C. Mantis\",\n            genre: \"Fantasy, Magic, LitRPG\",\n            progress: 100,\n            status: \"Read\",\n            rating: 5\n        },\n        {\n            id: 6,\n            cover: \"\",\n            title: \"Dungeon Crawler Carl\",\n            author: \"Matt Dinniman\",\n            genre: \"LitRPG, Apocalypse, Dungeon\",\n            progress: 100,\n            status: \"Read\",\n            rating: 4\n        },\n        {\n            id: 7,\n            cover: \"\",\n            title: \"The Hedge Wizard\",\n            author: \"Alex Maher\",\n            genre: \"Fantasy, Magic, Adventure\",\n            progress: 100,\n            status: \"Read\",\n            rating: 5\n        }\n    ];\n    /**\n   * Display Books\n   * Renders each book as Artciles inside Book-List Section.\n   * @returns {void}\n   */ function displayBooks() {\n        bookList.innerHTML = \"\";\n        books.forEach((book)=>{\n            // Book Article\n            const bookCard = document.createElement(\"article\");\n            bookCard.id = book.id;\n            bookCard.classList.add(\"book-card\");\n            bookCard.setAttribute(\"aria-labelledby\", `book-title-${book.id}`);\n            // Book image container\n            if (book.cover !== \"\") {\n                const bookImgDiv = document.createElement(\"div\");\n                bookImgDiv.classList.add(\"book-img\");\n                const bookImg = document.createElement(\"img\");\n                bookImg.src = book.cover;\n                bookImg.alt = `${book.title} Book Cover`;\n                bookImgDiv.appendChild(bookImg);\n                bookCard.appendChild(bookImgDiv);\n            }\n            // Book info container\n            const bookInfoDiv = document.createElement(\"div\");\n            bookInfoDiv.classList.add(\"book-info\");\n            const bookTitle = document.createElement(\"h2\");\n            bookTitle.id = `book-title-${book.id}`;\n            bookTitle.textContent = book.title;\n            const bookAuthor = document.createElement(\"p\");\n            bookAuthor.innerHTML = `<strong>Author:</strong> ${book.author}`;\n            const bookGenre = document.createElement(\"p\");\n            bookGenre.innerHTML = `<strong>Genre:</strong> ${book.genre}`;\n            const bookStatus = document.createElement(\"p\");\n            bookStatus.innerHTML = `<strong>Status:</strong> ${book.status}`;\n            const bookProgress = document.createElement(\"p\");\n            bookProgress.innerHTML = `<strong>Progress:</strong> ${book.progress}%`;\n            const bookRatingSpan = document.createElement(\"span\");\n            bookRatingSpan.classList.add(\"book-rating\");\n            bookRatingSpan.setAttribute(\"aria-label\", `Rating: ${book.rating} out of 5 stars`);\n            bookRatingSpan.innerHTML = renderStars(book.rating);\n            // Append all info elements\n            bookInfoDiv.appendChild(bookTitle);\n            bookInfoDiv.appendChild(bookAuthor);\n            bookInfoDiv.appendChild(bookGenre);\n            bookInfoDiv.appendChild(bookStatus);\n            bookInfoDiv.appendChild(bookProgress);\n            // Append info to article\n            bookCard.appendChild(bookInfoDiv);\n            bookCard.appendChild(bookRatingSpan);\n            // Append Article and\n            bookList.appendChild(bookCard);\n        });\n    }\n    /**\n   * Utility Function that creates a string of stars based on the rating value.\n   * @param {number} rating - Rating value from 1 to 5\n   * @returns {string} - String of stars\n   */ function renderStars(rating) {\n        return \"&starf;\".repeat(rating) + \"&star;\".repeat(5 - rating);\n    }\n    // Book Form Functionality\n    bookList.addEventListener(\"click\", (event)=>{\n        const bookCard = event.target.closest(\".book-card\");\n        if (bookCard) {\n            const bookId = bookCard.id;\n            const book = books.find((b)=>b.id == bookId);\n            openBookForm(book);\n        }\n    });\n    /**\n   * Open Book Form\n   * Populates form fields with book data when editing\n   * or clears form fields when adding a new book entry.\n   * @param {Object|null} book - Book object to populate form fields\n   * @returns {void}\n   */ function openBookForm(book = null) {\n        const formCover = document.getElementById(\"book-cover\");\n        const formId = document.getElementById(\"book-id\");\n        const formTitle = document.getElementById(\"book-title\");\n        const formAuthor = document.getElementById(\"book-author\");\n        const formGenre = document.getElementById(\"book-genre\");\n        const formProgress = document.getElementById(\"book-progress\");\n        const formStatus = document.getElementById(\"book-status\");\n        const formRating = document.getElementById(\"book-rating\");\n        if (book) {\n            formCover.value = book.cover;\n            formId.value = book.id;\n            formTitle.value = book.title;\n            formAuthor.value = book.author;\n            formGenre.value = book.genre;\n            formProgress.value = book.progress;\n            formStatus.value = book.status;\n            formRating.value = book.rating;\n            deleteBook.style.display = \"inline-block\";\n        } else {\n            formCover.value = \"\";\n            formId.value = \"\";\n            formTitle.value = \"\";\n            formAuthor.value = \"\";\n            formGenre.value = \"\";\n            formProgress.value = \"\";\n            formStatus.value = \"Not Read\";\n            formRating.value = \"\";\n            deleteBook.style.display = \"none\";\n        }\n        bookForm.classList.add(\"show\");\n        bookList.classList.add(\"hide\");\n    }\n    // Save Book Button Functionality\n    saveBook.addEventListener(\"click\", ()=>{\n        const form = document.getElementById(\"book-management-form\");\n        if (!form.checkValidity()) {\n            form.reportValidity();\n            return;\n        }\n        let cover = document.getElementById(\"book-cover\").value;\n        let title = document.getElementById(\"book-title\").value;\n        let author = document.getElementById(\"book-author\").value;\n        let genre = document.getElementById(\"book-genre\").value;\n        let progress = document.getElementById(\"book-progress\").value;\n        let status = document.getElementById(\"book-status\").value;\n        let rating = document.getElementById(\"book-rating\").value;\n        let savedBook;\n        if (bookId.value !== \"\") {\n            const bookIndex = books.findIndex((book)=>book.id == bookId.value);\n            if (bookIndex !== -1) {\n                books[bookIndex] = {\n                    id: bookId.value,\n                    cover: cover,\n                    title: title,\n                    author: author,\n                    genre: genre,\n                    progress: progress,\n                    status: status,\n                    rating: rating\n                };\n                savedBook = books[bookIndex];\n            }\n        } else {\n            const newBook = {\n                id: books.length + 1,\n                cover: cover,\n                title: title,\n                author: author,\n                genre: genre,\n                progress: progress,\n                status: status,\n                rating: rating\n            };\n            books.push(newBook);\n            savedBook = newBook;\n        }\n        displayBooks();\n        bookForm.classList.remove(\"show\");\n        bookList.classList.remove(\"hide\");\n        const savedBookCard = document.getElementById(savedBook.id);\n        console.log(\"Saved Book ID: \", savedBook.id);\n        console.log(\"Saved Book Card: \", savedBookCard);\n        if (savedBookCard) {\n            savedBookCard.classList.add(\"highlight\");\n            savedBookCard.focus();\n            savedBookCard.scrollIntoView({\n                behavior: \"smooth\"\n            });\n            setTimeout(()=>savedBookCard.classList.remove(\"highlight\"), 1500);\n        }\n    });\n    // Close Form Button Functionality\n    closeBookForm.addEventListener(\"click\", ()=>{\n        bookForm.classList.remove(\"show\");\n        bookList.classList.remove(\"hide\");\n    });\n    // Delete Book Button Functionality\n    deleteBook.addEventListener(\"click\", function() {\n        if (bookId.value === \"\") return;\n        if (confirm(`Are you sure you want to delete the book \"${document.getElementById(\"book-title\").value}\" entry?`)) {\n            books = books.filter((book)=>book.id != bookId.value);\n            displayBooks();\n            bookForm.classList.remove(\"show\");\n            bookList.classList.remove(\"hide\");\n        }\n    });\n    // Add Book Link Functionality\n    addBookLink.addEventListener(\"click\", (event)=>{\n        event.preventDefault();\n        openBookForm();\n        closeMenu();\n    });\n    // First Display of Books on Page Load\n    displayBooks();\n});\n\n\n//# sourceMappingURL=index.3e4a8120.js.map\n","\"use strict\";\n\nvar mapping = new Map();\nfunction register(baseUrl, manifest) {\n  for (var i = 0; i < manifest.length - 1; i += 2) {\n    mapping.set(manifest[i], {\n      baseUrl: baseUrl,\n      path: manifest[i + 1]\n    });\n  }\n}\nfunction resolve(id) {\n  var resolved = mapping.get(id);\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n  return new URL(resolved.path, resolved.baseUrl).toString();\n}\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(new __parcel__URL__(\"\").toString(),JSON.parse(\"[\\\"seGuh\\\",\\\"index.3e4a8120.js\\\",\\\"LVq70\\\",\\\"service-worker.612cd456.js\\\"]\"));","const sw = new URL(\"../service-worker.js\", import.meta.url);\nif (\"serviceWorker\" in navigator) {\n  const s = navigator.serviceWorker;\n  s.register(sw.href, {\n    scope: \"/codex/\",\n  })\n    .then((_) =>\n      console.log(\n        \"Service Worker Registered for scope:\",\n        sw.href,\n        \"with\",\n        import.meta.url\n      )\n    )\n    .catch((err) => console.error(\"Service Worker Error:\", err));\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const bookList = document.getElementById(\"book-list\");\n  const bookForm = document.getElementById(\"book-form\");\n  const menu = document.getElementById(\"side-menu\");\n  const overlay = document.getElementById(\"menu-overlay\");\n  const burgerMenu = document.getElementById(\"burger-menu\");\n  const closeButton = document.getElementById(\"close-menu\");\n  const addBookLink = document.getElementById(\"add-book-link\");\n  const saveBook = document.getElementById(\"save-book\");\n  const closeBookForm = document.getElementById(\"close-form\");\n  const deleteBook = document.getElementById(\"delete-book\");\n  const bookId = document.getElementById(\"book-id\");\n\n  // Burguer Menu Functionality\n  function openMenu() {\n    menu.classList.add(\"open\");\n    overlay.classList.add(\"show\");\n  }\n\n  function closeMenu() {\n    menu.classList.remove(\"open\");\n    overlay.classList.remove(\"show\");\n  }\n\n  burgerMenu.addEventListener(\"click\", openMenu);\n  closeButton.addEventListener(\"click\", closeMenu);\n  overlay.addEventListener(\"click\", closeMenu);\n\n  // Display Books Functionality\n  let books = [\n    {\n      id: 1,\n      cover:\n        \"https://www.royalroadcdn.com/public/covers-full/21220-mother-of-learning.jpg?time=1637247458\",\n      title: \"Mother of Learning\",\n      author: \"nobody103, Domagoj Kurmaić\",\n      genre: \"Fantasy, Magic, Time Travel\",\n      progress: 100,\n      status: \"Read\",\n      rating: 5,\n    },\n    {\n      id: 2,\n      cover: \"\",\n      title: \"A Practical Guide to Sorcery\",\n      author: \"Azalea Ellis\",\n      genre: \"Fantasy, Magic, Gender Bender\",\n      progress: 90,\n      status: \"Reading\",\n      rating: 4,\n    },\n    {\n      id: 3,\n      cover: \"\",\n      title: \"Os Sete\",\n      author: \"André Vianco\",\n      genre: \"Horror, Vampires\",\n      progress: 100,\n      status: \"Read\",\n      rating: 5,\n    },\n    {\n      id: 4,\n      cover: \"\",\n      title: \"Super Supportive\",\n      author: \"Sleyca\",\n      genre: \"Super Heroes, Slice of Life\",\n      progress: 90,\n      status: \"Dropped\",\n      rating: 3,\n    },\n    {\n      id: 5,\n      cover: \"\",\n      title: \"The Path of Ascension\",\n      author: \"C. Mantis\",\n      genre: \"Fantasy, Magic, LitRPG\",\n      progress: 100,\n      status: \"Read\",\n      rating: 5,\n    },\n    {\n      id: 6,\n      cover: \"\",\n      title: \"Dungeon Crawler Carl\",\n      author: \"Matt Dinniman\",\n      genre: \"LitRPG, Apocalypse, Dungeon\",\n      progress: 100,\n      status: \"Read\",\n      rating: 4,\n    },\n    {\n      id: 7,\n      cover: \"\",\n      title: \"The Hedge Wizard\",\n      author: \"Alex Maher\",\n      genre: \"Fantasy, Magic, Adventure\",\n      progress: 100,\n      status: \"Read\",\n      rating: 5,\n    },\n  ];\n\n  /**\n   * Display Books\n   * Renders each book as Artciles inside Book-List Section.\n   * @returns {void}\n   */\n  function displayBooks() {\n    bookList.innerHTML = \"\";\n    books.forEach((book) => {\n      // Book Article\n      const bookCard = document.createElement(\"article\");\n      bookCard.id = book.id;\n      bookCard.classList.add(\"book-card\");\n      bookCard.setAttribute(\"aria-labelledby\", `book-title-${book.id}`);\n      // Book image container\n      if (book.cover !== \"\") {\n        const bookImgDiv = document.createElement(\"div\");\n        bookImgDiv.classList.add(\"book-img\");\n        const bookImg = document.createElement(\"img\");\n        bookImg.src = book.cover;\n        bookImg.alt = `${book.title} Book Cover`;\n        bookImgDiv.appendChild(bookImg);\n        bookCard.appendChild(bookImgDiv);\n      }\n      // Book info container\n      const bookInfoDiv = document.createElement(\"div\");\n      bookInfoDiv.classList.add(\"book-info\");\n      const bookTitle = document.createElement(\"h2\");\n      bookTitle.id = `book-title-${book.id}`;\n      bookTitle.textContent = book.title;\n      const bookAuthor = document.createElement(\"p\");\n      bookAuthor.innerHTML = `<strong>Author:</strong> ${book.author}`;\n      const bookGenre = document.createElement(\"p\");\n      bookGenre.innerHTML = `<strong>Genre:</strong> ${book.genre}`;\n      const bookStatus = document.createElement(\"p\");\n      bookStatus.innerHTML = `<strong>Status:</strong> ${book.status}`;\n      const bookProgress = document.createElement(\"p\");\n      bookProgress.innerHTML = `<strong>Progress:</strong> ${book.progress}%`;\n      const bookRatingSpan = document.createElement(\"span\");\n      bookRatingSpan.classList.add(\"book-rating\");\n      bookRatingSpan.setAttribute(\n        \"aria-label\",\n        `Rating: ${book.rating} out of 5 stars`\n      );\n      bookRatingSpan.innerHTML = renderStars(book.rating);\n      // Append all info elements\n      bookInfoDiv.appendChild(bookTitle);\n      bookInfoDiv.appendChild(bookAuthor);\n      bookInfoDiv.appendChild(bookGenre);\n      bookInfoDiv.appendChild(bookStatus);\n      bookInfoDiv.appendChild(bookProgress);\n      // Append info to article\n      bookCard.appendChild(bookInfoDiv);\n      bookCard.appendChild(bookRatingSpan);\n      // Append Article and\n      bookList.appendChild(bookCard);\n    });\n  }\n\n  /**\n   * Utility Function that creates a string of stars based on the rating value.\n   * @param {number} rating - Rating value from 1 to 5\n   * @returns {string} - String of stars\n   */\n  function renderStars(rating) {\n    return \"&starf;\".repeat(rating) + \"&star;\".repeat(5 - rating);\n  }\n\n  // Book Form Functionality\n  bookList.addEventListener(\"click\", (event) => {\n    const bookCard = event.target.closest(\".book-card\");\n    if (bookCard) {\n      const bookId = bookCard.id;\n      const book = books.find((b) => b.id == bookId);\n      openBookForm(book);\n    }\n  });\n\n  /**\n   * Open Book Form\n   * Populates form fields with book data when editing\n   * or clears form fields when adding a new book entry.\n   * @param {Object|null} book - Book object to populate form fields\n   * @returns {void}\n   */\n  function openBookForm(book = null) {\n    const formCover = document.getElementById(\"book-cover\");\n    const formId = document.getElementById(\"book-id\");\n    const formTitle = document.getElementById(\"book-title\");\n    const formAuthor = document.getElementById(\"book-author\");\n    const formGenre = document.getElementById(\"book-genre\");\n    const formProgress = document.getElementById(\"book-progress\");\n    const formStatus = document.getElementById(\"book-status\");\n    const formRating = document.getElementById(\"book-rating\");\n\n    if (book) {\n      formCover.value = book.cover;\n      formId.value = book.id;\n      formTitle.value = book.title;\n      formAuthor.value = book.author;\n      formGenre.value = book.genre;\n      formProgress.value = book.progress;\n      formStatus.value = book.status;\n      formRating.value = book.rating;\n      deleteBook.style.display = \"inline-block\";\n    } else {\n      formCover.value = \"\";\n      formId.value = \"\";\n      formTitle.value = \"\";\n      formAuthor.value = \"\";\n      formGenre.value = \"\";\n      formProgress.value = \"\";\n      formStatus.value = \"Not Read\";\n      formRating.value = \"\";\n      deleteBook.style.display = \"none\";\n    }\n\n    bookForm.classList.add(\"show\");\n    bookList.classList.add(\"hide\");\n  }\n\n  // Save Book Button Functionality\n  saveBook.addEventListener(\"click\", () => {\n    const form = document.getElementById(\"book-management-form\");\n    if (!form.checkValidity()) {\n      form.reportValidity();\n      return;\n    }\n\n    let cover = document.getElementById(\"book-cover\").value;\n    let title = document.getElementById(\"book-title\").value;\n    let author = document.getElementById(\"book-author\").value;\n    let genre = document.getElementById(\"book-genre\").value;\n    let progress = document.getElementById(\"book-progress\").value;\n    let status = document.getElementById(\"book-status\").value;\n    let rating = document.getElementById(\"book-rating\").value;\n\n    let savedBook;\n\n    if (bookId.value !== \"\") {\n      const bookIndex = books.findIndex((book) => book.id == bookId.value);\n      if (bookIndex !== -1) {\n        books[bookIndex] = {\n          id: bookId.value,\n          cover: cover,\n          title: title,\n          author: author,\n          genre: genre,\n          progress: progress,\n          status: status,\n          rating: rating,\n        };\n\n        savedBook = books[bookIndex];\n      }\n    } else {\n      const newBook = {\n        id: books.length + 1,\n        cover: cover,\n        title: title,\n        author: author,\n        genre: genre,\n        progress: progress,\n        status: status,\n        rating: rating,\n      };\n      books.push(newBook);\n\n      savedBook = newBook;\n    }\n\n    displayBooks();\n    bookForm.classList.remove(\"show\");\n    bookList.classList.remove(\"hide\");\n\n    const savedBookCard = document.getElementById(savedBook.id);\n    console.log(\"Saved Book ID: \", savedBook.id);\n    console.log(\"Saved Book Card: \", savedBookCard);\n\n    if (savedBookCard) {\n      savedBookCard.classList.add(\"highlight\");\n      savedBookCard.focus();\n      savedBookCard.scrollIntoView({ behavior: \"smooth\" });\n      setTimeout(() => savedBookCard.classList.remove(\"highlight\"), 1500);\n    }\n  });\n\n  // Close Form Button Functionality\n  closeBookForm.addEventListener(\"click\", () => {\n    bookForm.classList.remove(\"show\");\n    bookList.classList.remove(\"hide\");\n  });\n\n  // Delete Book Button Functionality\n  deleteBook.addEventListener(\"click\", function () {\n    if (bookId.value === \"\") return;\n    if (\n      confirm(\n        `Are you sure you want to delete the book \"${\n          document.getElementById(\"book-title\").value\n        }\" entry?`\n      )\n    ) {\n      books = books.filter((book) => book.id != bookId.value);\n      displayBooks();\n      bookForm.classList.remove(\"show\");\n      bookList.classList.remove(\"hide\");\n    }\n  });\n\n  // Add Book Link Functionality\n  addBookLink.addEventListener(\"click\", (event) => {\n    event.preventDefault();\n    openBookForm();\n    closeMenu();\n  });\n\n  // First Display of Books on Page Load\n  displayBooks();\n});\n","module.exports = new __parcel__URL__(\"service-worker.612cd456.js\").toString();"],"names":["$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","Object","defineProperty","get","$18c11f3350a906ea$export$6503ec6e8aabbaf","set","v","enumerable","configurable","$18c11f3350a906ea$var$mapping","Map","baseUrl","manifest","i","length","path","URL","url","toString","JSON","parse","$9b58f915dd881523$exports","$1b8da20507600032$var$sw","navigator","s","serviceWorker","href","scope","then","_","console","log","catch","error","document","addEventListener","bookList","getElementById","bookForm","menu","overlay","burgerMenu","closeButton","addBookLink","saveBook","closeBookForm","deleteBook","bookId","closeMenu","classList","remove","add","books","cover","title","author","genre","progress","status","rating","displayBooks","innerHTML","forEach","book","bookCard","createElement","setAttribute","bookImgDiv","bookImg","src","alt","appendChild","bookInfoDiv","bookTitle","textContent","bookAuthor","bookGenre","bookStatus","bookProgress","bookRatingSpan","repeat","openBookForm","formCover","formId","formTitle","formAuthor","formGenre","formProgress","formStatus","formRating","value","style","display","event","target","closest","find","b","savedBook","form","checkValidity","reportValidity","bookIndex","findIndex","newBook","push","savedBookCard","focus","scrollIntoView","behavior","setTimeout","confirm","filter","preventDefault"],"version":3,"file":"index.3e4a8120.js.map"}